* What is this

Another attempt to build tactical meeting manager application, now using https://biffweb.com/

** Biff starter project

*** Run

 This is the starter project for Biff.

 Run:

 #+begin_example
 clj -M:dev dev
 #+end_example

 to get started. See `clj -M:dev --help` for other commands.

 Consider adding `alias biff='clj -M:dev'` to your `.bashrc`.

** Refresh running code

 In the file repl.clj run:
 #+begin_example
 (main/refresh)
 #+end_example

* Work plan
** DONE Remove tailwind, use Bulma
   CLOSED: [2025-01-08 Wed 11:06]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2025-01-08 Wed 11:06]
   - State "TODO"       from              [2025-01-07 Tue 21:38]
   :END:
** DONE Add alpinejs
   CLOSED: [2025-01-08 Wed 11:07]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2025-01-08 Wed 11:07]
   - State "TODO"       from              [2025-01-07 Tue 21:38]
   :END:
** WORKING Add Google oauth
   :LOGBOOK:
   - State "WORKING"    from "TODO"       [2025-02-09 Sun 11:25]
   CLOCK: [2025-02-07 Fri 21:49]--[2025-02-07 Fri 22:04] =>  0:15
   CLOCK: [2025-02-02 Sun 08:07]--[2025-02-02 Sun 09:20] =>  1:13
   CLOCK: [2025-01-19 Sun 07:49]--[2025-01-19 Sun 10:34] =>  2:45
   CLOCK: [2025-01-18 Sat 12:33]--[2025-01-18 Sat 12:58] =>  0:25
   CLOCK: [2025-01-13 Mon 07:47]--[2025-01-13 Mon 09:51] =>  2:04
   CLOCK: [2025-01-12 Sun 08:46]--[2025-01-12 Sun 09:20] =>  0:34
   CLOCK: [2025-01-11 Sat 14:29]--[2025-01-11 Sat 14:30] =>  0:01
   - State "TODO"       from              [2025-01-07 Tue 21:38]
   CLOCK: [2025-01-10 Fri 09:09]--[2025-01-10 Fri 09:11] =>  0:02
   CLOCK: [2025-01-10 Fri 08:53]--[2025-01-10 Fri 09:00] =>  0:07
   CLOCK: [2025-01-10 Fri 07:14]--[2025-01-10 Fri 07:30] =>  0:16
   :END:

  https://github.com/weavejester/ring-oauth2

 Its said its "ring middleware". Reading, how to embed this into my app. Starting reading from: https://github.com/ring-clojure/ring
 - [X] what is ring middleware? what is typical use cases?
 - [X] do I have ring server in ~biff~ ?
 - [X] where is the correct place in app code to add this middleware?

 [2025-01-12 Sun]
 - Reading concepts: https://github.com/ring-clojure/ring/wiki/Concepts
 - https://lambdaisland.com/episodes/passwordless-authentication-ring-oauth2
 - https://github.com/kelveden/ring-jwt
 - https://github.com/green-coder/reitit-oauth2
 - https://clojurians.slack.com/archives/C0A5GSC6T/p1723490472867279
 - https://stackoverflow.com/questions/32076503/using-postman-to-access-oauth-2-0-google-apis found URIs example here
 - scopes: https://developers.google.com/identity/protocols/oauth2/scopes

 [2025-01-18 Sat], [2025-01-19 Sun]
 - [X] Add credentials in google developers console
 - [ ] Configure middleware directly in code, do not commit!
 - [ ] Integrate middleware pages - redirect to login when not logged in, redirect to logged in part from top URL
   like in Django @login_required decorator
 - [X] Use credentials from config.edn & config.env
 - [-] after log in: 
   - [-] set userinfo
     - [X] set as whole at stage1
     - [ ] email address or even db uid?
   - [ ] redirect to main page and show 'logged in as ... / log out button'
 - [ ] Commit

 - https://funcool.github.io/buddy-sign/latest/01-jwt.html
 - https://blog.jakubholy.net/2023/accessing-google-api-from-clojure/
 - [ ] How to set session key?

** WORKING replace alpinejs and htmx with datastar!
   :LOGBOOK:
   CLOCK: [2025-02-09 Sun 14:37]--[2025-02-09 Sun 17:23] =>  2:46
   - State "WORKING"    from "TODO"       [2025-02-09 Sun 13:45]
   CLOCK: [2025-02-09 Sun 13:46]--[2025-02-09 Sun 14:07] =>  0:21
   - State "TODO"       from              [2025-02-09 Sun 11:40]
   :END:

 - [X] download & put into static
 - [ ] add processor
 - [ ] try with some simple example

** WORKING Try datastar
   :LOGBOOK:
   - State "WORKING"    from              [2025-02-22 Sat 18:25]
   :END:

 - [ ] Integrate Bulma responsive menu using datastar
 - [ ] Try some backend signal
 - [ ] Try some backend fragment

** TODO make plan of next steps & screens
   :LOGBOOK:
   - State "TODO"       from              [2025-02-09 Sun 12:55]
   :END:

* Planned Features [0/15]
  :PROPERTIES:
  :COOKIE_DATA: recursive
  :END:

 - Identification & Authorization
   - [ ] Google Auth
 - Permissions:
   - User can
     - [ ] Join existing team (or several)
     - [ ] See meetings calendar
     - [ ] Join meeting (if started)
   - Admin can
     - [ ] Manage teams
       - [ ] allow people/domains to join
       - [ ] manage team 
       - [ ] add registered people manually
     - [ ] Manage invites
     - [ ] Manage allowed email domains per team
 - [ ] User Registration
 - [ ] Add team
 - [ ] Add user
 - [ ] menu + burger + alpinejs
 - [ ] use calendar from https://doc.mh-s.de/bulma-calendar/demonstration/date/
